{"version":3,"sources":["../../../source/lib/workbook/builder.js"],"names":[],"mappings":"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","file":"builder.js","sourcesContent":["const xmlbuilder = require('xmlbuilder');\nconst JSZip = require('jszip');\nconst fs = require('fs');\nconst CTColor = require('../style/classes/ctColor.js');\n\nlet addRootContentTypesXML = (promiseObj) => {\n    // Required as stated in §12.2\n    return new Promise ((resolve, reject) => {\n        let xml = xmlbuilder.create(\n            'Types',\n            {\n                'version': '1.0', \n                'encoding': 'UTF-8', \n                'standalone': true\n            }\n        )\n        .att('xmlns', 'http://schemas.openxmlformats.org/package/2006/content-types');\n\n        let contentTypesAdded = [];\n        promiseObj.wb.sheets.forEach((s, i) => {\n            if (s.drawingCollection.length > 0) { \n                let extensionsAdded = [];\n                s.drawingCollection.drawings.forEach((d) => {\n                    if (extensionsAdded.indexOf(d.extension) < 0) {\n                        let typeRef = d.contentType + '.' + d.extension;\n                        if (contentTypesAdded.indexOf(typeRef) < 0) {\n                            xml.ele('Default').att('ContentType', d.contentType).att('Extension', d.extension);\n                        }\n                        extensionsAdded.push(d.extension);\n                    }\n                });\n            }\n        });\n        xml.ele('Default').att('ContentType', 'application/xml').att('Extension', 'xml');\n        xml.ele('Default').att('ContentType', 'application/vnd.openxmlformats-package.relationships+xml').att('Extension', 'rels');\n        xml.ele('Override').att('ContentType', 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet.main+xml').att('PartName', '/xl/workbook.xml');\n        promiseObj.wb.sheets.forEach((s, i) => {\n            xml.ele('Override')\n            .att('ContentType', 'application/vnd.openxmlformats-officedocument.spreadsheetml.worksheet+xml')\n            .att('PartName', `/xl/worksheets/sheet${i + 1}.xml`);\n\n            if (s.drawingCollection.length > 0) {              \n                xml.ele('Override')\n                .att('ContentType', 'application/vnd.openxmlformats-officedocument.drawing+xml')\n                .att('PartName', '/xl/drawings/drawing' + s.sheetId + '.xml');  \n            }\n        });\n        xml.ele('Override').att('ContentType', 'application/vnd.openxmlformats-officedocument.spreadsheetml.styles+xml').att('PartName', '/xl/styles.xml');\n        xml.ele('Override').att('ContentType', 'application/vnd.openxmlformats-officedocument.spreadsheetml.sharedStrings+xml').att('PartName', '/xl/sharedStrings.xml');\n\n        let xmlString = xml.doc().end(promiseObj.xmlOutVars);\n        promiseObj.xlsx.file('[Content_Types].xml', xmlString);\n        resolve(promiseObj);\n    });\n};\n\nlet addRootRelsXML = (promiseObj) => {\n    // Required as stated in §12.2\n    return new Promise ((resolve, reject) => {\n        let xml = xmlbuilder.create(\n            'Relationships',\n            {\n                'version': '1.0', \n                'encoding': 'UTF-8', \n                'standalone': true\n            }\n        )\n        .att('xmlns', 'http://schemas.openxmlformats.org/package/2006/relationships');\n\n        xml\n        .ele('Relationship')\n        .att('Id', 'rId1')\n        .att('Type', 'http://schemas.openxmlformats.org/officeDocument/2006/relationships/officeDocument')\n        .att('Target', 'xl/workbook.xml');\n\n        let xmlString = xml.doc().end(promiseObj.xmlOutVars);\n        promiseObj.xlsx.folder('_rels').file('.rels', xmlString);\n        resolve(promiseObj);\n\n    });\n};\n\nlet addWorkBookXML = (promiseObj) => {\n    // Required as stated in §12.2\n    return new Promise((resolve, reject) => {\n\n        let xml = xmlbuilder.create(\n            'workbook',\n            {\n                'version': '1.0', \n                'encoding': 'UTF-8', \n                'standalone': true\n            }\n        );\n        xml.att('mc:Ignorable', 'x15');\n        xml.att('xmlns', 'http://schemas.openxmlformats.org/spreadsheetml/2006/main');\n        xml.att('xmlns:mc', 'http://schemas.openxmlformats.org/markup-compatibility/2006');\n        xml.att('xmlns:r', 'http://schemas.openxmlformats.org/officeDocument/2006/relationships');\n        xml.att('xmlns:x15', 'http://schemas.microsoft.com/office/spreadsheetml/2010/11/main');\n\n        let booksViewEle = xml.ele('bookViews');\n        booksViewEle.ele('workbookView')\n        .att('xWindow', '240')\n        .att('yWindow', '15')\n        .att('windowWidth', '8505')\n        .att('windowHeight', '6240');\n\n        let sheetsEle = xml.ele('sheets');\n        promiseObj.wb.sheets.forEach((s, i) => {\n            sheetsEle.ele('sheet')\n            .att('name', s.name)\n            .att('sheetId', i + 1)\n            .att('r:id', `rId${i + 1}`);\n        });\n\n        if (!promiseObj.wb.definedNameCollection.isEmpty) {\n            promiseObj.wb.definedNameCollection.addToXMLele(xml);\n        }\n\n        let xmlString = xml.doc().end(promiseObj.xmlOutVars);\n        promiseObj.xlsx.folder('xl').file('workbook.xml', xmlString);\n        resolve(promiseObj);\n\n    });\n};\n\nlet addWorkBookRelsXML = (promiseObj) => {\n    // Required as stated in §12.2\n    return new Promise((resolve, reject) => {\n\n        let xml = xmlbuilder.create(\n            'Relationships',\n            {\n                'version': '1.0', \n                'encoding': 'UTF-8', \n                'standalone': true\n            }\n        )\n        .att('xmlns', 'http://schemas.openxmlformats.org/package/2006/relationships');\n\n        xml\n        .ele('Relationship')\n        .att('Id', `rId${promiseObj.wb.sheets.length + 1}`)\n        .att('Target', 'sharedStrings.xml')\n        .att('Type', 'http://schemas.openxmlformats.org/officeDocument/2006/relationships/sharedStrings');\n\n        xml\n        .ele('Relationship')\n        .att('Id', `rId${promiseObj.wb.sheets.length + 2}`)\n        .att('Target', 'styles.xml')\n        .att('Type', 'http://schemas.openxmlformats.org/officeDocument/2006/relationships/styles');\n\n        promiseObj.wb.sheets.forEach((s, i) => {\n            xml\n            .ele('Relationship')\n            .att('Id', `rId${i + 1}`)\n            .att('Target', `worksheets/sheet${i + 1}.xml`)\n            .att('Type', 'http://schemas.openxmlformats.org/officeDocument/2006/relationships/worksheet');\n        });\n\n        let xmlString = xml.doc().end(promiseObj.xmlOutVars);\n        promiseObj.xlsx.folder('xl').folder('_rels').file('workbook.xml.rels', xmlString);\n        resolve(promiseObj);\n\n    });\n};\n\nlet addWorkSheetsXML = (promiseObj) => {\n    // Required as stated in §12.2\n    return new Promise ((resolve, reject) => {\n\n        let curSheet = 0;\n        \n        let processNextSheet = () => {\n            let thisSheet = promiseObj.wb.sheets[curSheet];\n            if (thisSheet) {\n                curSheet++;\n                thisSheet.generateXML()\n                .then((xml) => {\n                    return new Promise((resolve) =>{\n                        // Add worksheet to zip\n                        promiseObj.xlsx.folder('xl').folder('worksheets').file(`sheet${curSheet}.xml`, xml); \n                        \n                        resolve();\n                    });\n                })\n                .then(() => {\n                    return thisSheet.generateRelsXML();\n                })\n                .then((xml) => {\n                    return new Promise((resolve) => {\n                        if (xml) {\n                            promiseObj.xlsx.folder('xl').folder('worksheets').folder('_rels').file(`sheet${curSheet}.xml.rels`, xml);\n                        }\n                        resolve();\n                    });\n                })\n                .then(processNextSheet)\n                .catch((e) => {\n                    promiseObj.wb.logger.error(e.stack);\n                });\n            } else {\n                resolve(promiseObj);\n            }\n        };\n        processNextSheet();\n\n    });\n};\n\n/**\n * Generate XML for SharedStrings.xml file and add it to zip file. Called from _writeToBuffer()\n * @private\n * @memberof WorkBook\n * @param {Object} promiseObj object containing jszip instance, workbook intance and xmlvars\n * @return {Promise} Resolves with promiseObj\n */\nlet addSharedStringsXML = (promiseObj) => {\n    // §12.3.15 Shared String Table Part\n    return new Promise ((resolve, reject) => {\n\n        let xml = xmlbuilder.create(\n            'sst',\n            {\n                'version': '1.0', \n                'encoding': 'UTF-8', \n                'standalone': true\n            }\n        )\n        .att('count', promiseObj.wb.sharedStrings.length)\n        .att('uniqueCount', promiseObj.wb.sharedStrings.length)\n        .att('xmlns', 'http://schemas.openxmlformats.org/spreadsheetml/2006/main');\n\n        promiseObj.wb.sharedStrings.forEach((s) => {\n            if (typeof s === 'string') {\n                xml.ele('si').ele('t').txt(s);\n            } else if (s instanceof Array) {\n\n                let thisSI = xml.ele('si');\n                let theseRuns = []; // §18.4.4 r (Rich Text Run)\n                let currProps = {};\n                let curRun;\n                let i = 0;\n                while (i < s.length) {\n                    if (typeof s[i] === 'string') {\n                        if (curRun === undefined) {\n                            theseRuns.push({\n                                props: {},\n                                text: ''\n                            });\n                            curRun = theseRuns[theseRuns.length - 1];\n                        } \n                        curRun.text = curRun.text + s[i];\n                    } else if (typeof s[i] === 'object') {\n                        theseRuns.push({\n                            props: {},\n                            text: ''\n                        });\n                        curRun = theseRuns[theseRuns.length - 1];\n                        Object.keys(s[i]).forEach((k) => {\n                            currProps[k] = s[i][k];\n                        });\n                        Object.keys(currProps).forEach((k) => {\n                            curRun.props[k] = currProps[k];\n                        });\n                        if (s[i].value !== undefined) {\n                            curRun.text = s[i].value;\n                        }\n                    }\n                    i++;\n                }\n\n                theseRuns.forEach((run) => {\n                    if (Object.keys(run).length < 1) {\n                        thisSI.ele('t', run.text).att('xml:space', 'preserve');\n                    } else {\n                        let thisRun = thisSI.ele('r');\n                        let thisRunProps = thisRun.ele('rPr');\n                        typeof run.props.name === 'string' ? thisRunProps.ele('rFont').att('val', run.props.name) : null;\n                        run.props.bold === true ? thisRunProps.ele('b') : null;\n                        run.props.italics === true ? thisRunProps.ele('i') : null;\n                        run.props.strike === true ? thisRunProps.ele('strike') : null;\n                        run.props.outline === true ? thisRunProps.ele('outline') : null;\n                        run.props.shadow === true ? thisRunProps.ele('shadow') : null;\n                        run.props.condense === true ? thisRunProps.ele('condense') : null;\n                        run.props.extend === true ? thisRunProps.ele('extend') : null;\n                        if (typeof run.props.color === 'string') {\n                            let thisColor = new CTColor(run.props.color);\n                            thisColor.addToXMLele(thisRunProps);\n                        }\n                        typeof run.props.size === 'number' ? thisRunProps.ele('sz').att('val', run.props.size) : null;\n                        run.props.underline === true ? thisRunProps.ele('u') : null;\n                        typeof run.props.vertAlign === 'string' ? thisRunProps.ele('vertAlign').att('val', run.props.vertAlign) : null;\n                        thisRun.ele('t', run.text).att('xml:space', 'preserve');\n                    }\n                });\n\n            }\n        });\n\n        let xmlString = xml.doc().end(promiseObj.xmlOutVars);\n        promiseObj.xlsx.folder('xl').file('sharedStrings.xml', xmlString);\n\n        resolve(promiseObj);\n\n    });\n};\n\nlet addStylesXML = (promiseObj) => {\n    // §12.3.20 Styles Part\n    return new Promise ((resolve, reject) => {\n\n        let xml = xmlbuilder.create(\n            'styleSheet',\n            {\n                'version': '1.0', \n                'encoding': 'UTF-8', \n                'standalone': true\n            }\n        )\n        .att('mc:Ignorable', 'x14ac')\n        .att('xmlns', 'http://schemas.openxmlformats.org/spreadsheetml/2006/main')\n        .att('xmlns:mc', 'http://schemas.openxmlformats.org/markup-compatibility/2006')\n        .att('xmlns:x14ac', 'http://schemas.microsoft.com/office/spreadsheetml/2009/9/ac');\n\n        if (promiseObj.wb.styleData.numFmts.length > 0) {\n            let nfXML = xml\n            .ele('numFmts')\n            .att('count', promiseObj.wb.styleData.numFmts.length);\n            promiseObj.wb.styleData.numFmts.forEach((nf) => {\n                nf.addToXMLele(nfXML);\n            });\n        }\n\n        let fontXML = xml\n        .ele('fonts')\n        .att('count', promiseObj.wb.styleData.fonts.length);\n        promiseObj.wb.styleData.fonts.forEach((f) => {\n            f.addToXMLele(fontXML);\n        });\n\n        let fillXML = xml \n        .ele('fills')\n        .att('count', promiseObj.wb.styleData.fills.length);\n        promiseObj.wb.styleData.fills.forEach((f) => {\n            let fXML = fillXML.ele('fill');\n            f.addToXMLele(fXML);\n        });\n\n        let borderXML = xml \n        .ele('borders')\n        .att('count', promiseObj.wb.styleData.borders.length);\n        promiseObj.wb.styleData.borders.forEach((b) => {\n            b.addToXMLele(borderXML);\n        });\n\n\n        let cellXfsXML = xml \n        .ele('cellXfs')\n        .att('count', promiseObj.wb.styles.length);\n        promiseObj.wb.styles.forEach((s) => {\n            s.addXFtoXMLele(cellXfsXML);\n        });\n\n        if (promiseObj.wb.dxfCollection.length > 0) {\n            promiseObj.wb.dxfCollection.addToXMLele(xml);\n        }\n\n        let xmlString = xml.doc().end(promiseObj.xmlOutVars);\n        promiseObj.xlsx.folder('xl').file('styles.xml', xmlString);\n\n        resolve(promiseObj);\n    });\n};\n\nlet addDrawingsXML = (promiseObj) => {\n    return new Promise((resolve) => {\n        if (!promiseObj.wb.mediaCollection.isEmpty) {\n\n            promiseObj.wb.sheets.forEach((ws) => {\n                if (!ws.drawingCollection.isEmpty) {\n\n                    let drawingRelXML = xmlbuilder.create('Relationships', \n                        {\n                            'version': '1.0', \n                            'encoding': 'UTF-8', \n                            'standalone': true\n                        }\n                    )\n                    .att('xmlns', 'http://schemas.openxmlformats.org/package/2006/relationships');\n\n                    let drawingsXML = xmlbuilder.create(\n                        'xdr:wsDr',\n                        {\n                            'version': '1.0', \n                            'encoding': 'UTF-8', \n                            'standalone': true\n                        }\n                    );\n                    drawingsXML\n                    .att('xmlns:a', 'http://schemas.openxmlformats.org/drawingml/2006/main')\n                    .att('xmlns:xdr', 'http://schemas.openxmlformats.org/drawingml/2006/spreadsheetDrawing');\n\n                    ws.drawingCollection.drawings.forEach((d) => {\n\n                        if (d.kind === 'image') {\n                            let target = 'image' + d.id + '.' + d.extension;\n                            promiseObj.xlsx.folder('xl').folder('media').file(target, fs.readFileSync(d.imagePath));\n\n                            drawingRelXML.ele('Relationship')\n                            .att('Id', d.rId)\n                            .att('Target', '../media/' + target)\n                            .att('Type', d.type);\n\n                        }\n\n\n\n                        d.addToXMLele(drawingsXML);\n                        \n                    });\n\n                    let drawingsXMLStr = drawingsXML.doc().end(promiseObj.xmlOutVars);\n                    let drawingRelXMLStr = drawingRelXML.doc().end(promiseObj.xmlOutVars);\n                    promiseObj.xlsx.folder('xl').folder('drawings').file('drawing' + ws.sheetId + '.xml', drawingsXMLStr);\n                    promiseObj.xlsx.folder('xl').folder('drawings').folder('_rels').file('drawing' + ws.sheetId + '.xml.rels', drawingRelXMLStr);\n                }\n            });\n\n        }\n        resolve(promiseObj);\n    });\n};\n\n/**\n * Use JSZip to generate file to a node buffer\n * @private\n * @memberof WorkBook\n * @param {WorkBook} wb WorkBook instance\n * @return {Promise} resolves with Buffer \n */\nlet writeToBuffer = (wb) => {\n    return new Promise ((resolve, reject) => {\n\n        let promiseObj = {\n            wb: wb, \n            xlsx: new JSZip(),\n            //xmlOutVars: { pretty: true, indent: '  ', newline: '\\n' }\n            xmlOutVars: {}\n        };\n\n\n        if (promiseObj.wb.sheets.length === 0) {\n            promiseObj.wb.WorkSheet();\n        }\n\n        addRootContentTypesXML(promiseObj)\n        .then(addWorkSheetsXML)\n        .then(addRootRelsXML)\n        .then(addWorkBookXML)\n        .then(addWorkBookRelsXML)\n        .then(addSharedStringsXML)\n        .then(addStylesXML)\n        .then(addDrawingsXML)\n        .then(() => {\n            wb.opts.jszip.type = 'nodebuffer';\n            let buffer = promiseObj.xlsx.generate(wb.opts.jszip);    \n            resolve(buffer);\n        })\n        .catch((e) => {\n            wb.logger.error(e.stack);\n        });\n\n    });\n};\n\nmodule.exports = { writeToBuffer };"]}
{"version":3,"sources":["../../../source/lib/types/alignment.js"],"names":[],"mappings":";;AAAA,SAAS,oBAAT,GAAgC;;;AAC5B,SAAK,IAAL,GAAY;AACR,YADQ,EAER,kBAFQ,EAGR,aAHQ,EAIR,MAJQ,EAKR,SALQ,EAMR,SANQ,EAOR,MAPQ,EAQR,OARQ,CAAZ,CAD4B;AAW5B,SAAK,IAAL,CAAU,OAAV,CAAkB,UAAC,CAAD,EAAI,CAAJ,EAAU;AACxB,cAAK,CAAL,IAAU,IAAI,CAAJ,CADc;KAAV,CAAlB,CAX4B;CAAhC;;AAgBA,SAAS,kBAAT,GAA8B;;;AAC1B,SAAK,IAAL,GAAY;AACR,YADQ,EAER,QAFQ,EAGR,aAHQ,EAIR,SAJQ,EAKR,KALQ,CAAZ,CAD0B;AAQ1B,SAAK,IAAL,CAAU,OAAV,CAAkB,UAAC,CAAD,EAAI,CAAJ,EAAU;AACxB,eAAK,CAAL,IAAU,IAAI,CAAJ,CADc;KAAV,CAAlB,CAR0B;CAA9B;;AAaA,SAAS,aAAT,GAAyB;AACrB,SAAK,kBAAL,IAA2B,CAA3B,CADqB;AAErB,SAAK,aAAL,IAAsB,CAAtB,CAFqB;AAGrB,SAAK,aAAL,IAAsB,CAAtB,CAHqB;AAIrB,SAAK,IAAL,GAAY,CAAC,kBAAD,EAAqB,aAArB,EAAoC,aAApC,CAAZ,CAJqB;CAAzB;;AAOA,qBAAqB,SAArB,CAA+B,QAA/B,GAA0C,UAAU,GAAV,EAAe;AACrD,QAAI,KAAK,GAAL,MAAc,SAAd,EAAyB;AACzB,YAAI,OAAO,EAAP,CADqB;AAEzB,aAAK,IAAI,IAAJ,IAAY,IAAjB,EAAuB;AACnB,gBAAI,KAAK,cAAL,CAAoB,IAApB,CAAJ,EAA+B;AAC3B,qBAAK,IAAL,CAAU,IAAV,EAD2B;aAA/B;SADJ;AAKA,cAAM,IAAI,SAAJ,6CAAwD,kCAA6B,KAAK,IAAL,CAAU,IAAV,CAAe,IAAf,CAArF,CAAN,CAPyB;KAA7B,MAQO;AACH,eAAO,IAAP,CADG;KARP;CADsC;;AAc1C,mBAAmB,SAAnB,CAA6B,QAA7B,GAAwC,UAAU,GAAV,EAAe;AACnD,QAAI,KAAK,GAAL,MAAc,SAAd,EAAyB;AACzB,YAAI,OAAO,EAAP,CADqB;AAEzB,aAAK,IAAI,IAAJ,IAAY,IAAjB,EAAuB;AACnB,gBAAI,KAAK,cAAL,CAAoB,IAApB,CAAJ,EAA+B;AAC3B,qBAAK,IAAL,CAAU,IAAV,EAD2B;aAA/B;SADJ;AAKA,cAAM,IAAI,SAAJ,2CAAsD,kCAA6B,KAAK,IAAL,CAAU,IAAV,CAAe,IAAf,CAAnF,CAAN,CAPyB;KAA7B,MAQO;AACH,eAAO,IAAP,CADG;KARP;CADoC;;AAcxC,cAAc,SAAd,CAAwB,QAAxB,GAAmC,UAAU,GAAV,EAAe;AAC9C,QAAI,KAAK,GAAL,MAAc,SAAd,EAAyB;AACzB,YAAI,OAAO,EAAP,CADqB;AAEzB,aAAK,IAAI,IAAJ,IAAY,IAAjB,EAAuB;AACnB,gBAAI,KAAK,cAAL,CAAoB,IAApB,CAAJ,EAA+B;AAC3B,qBAAK,IAAL,CAAU,IAAV,EAD2B;aAA/B;SADJ;AAKA,cAAM,IAAI,SAAJ,+CAA0D,kCAA6B,KAAK,IAAL,CAAU,IAAV,CAAe,IAAf,CAAvF,CAAN,CAPyB;KAA7B,MAQO;AACH,eAAO,IAAP,CADG;KARP;CAD+B;;AAcnC,OAAO,OAAP,CAAe,QAAf,GAA0B,IAAI,kBAAJ,EAA1B;AACA,OAAO,OAAP,CAAe,UAAf,GAA4B,IAAI,oBAAJ,EAA5B;AACA,OAAO,OAAP,CAAe,YAAf,GAA8B,IAAI,aAAJ,EAA9B","file":"alignment.js","sourcesContent":["function horizontalAlignments() {\n    this.opts = [ // ยง18.18.40 ST_HorizontalAlignment (Horizontal Alignment Type)\n        'center', \n        'centerContinuous', \n        'distributed', \n        'fill', \n        'general', \n        'justify', \n        'left', \n        'right'\n    ];\n    this.opts.forEach((o, i) => {\n        this[o] = i + 1;\n    });\n}\n\nfunction verticalAlignments() {\n    this.opts = [ //ยง18.18.88 ST_VerticalAlignment (Vertical Alignment Types)\n        'bottom', \n        'center', \n        'distributed', \n        'justify', \n        'top'\n    ];\n    this.opts.forEach((o, i) => {\n        this[o] = i + 1;\n    });\n}\n\nfunction readingOrders() {\n    this['contextDependent'] = 0;\n    this['leftToRight'] = 1;\n    this['rightToLeft'] = 2;\n    this.opts = ['contextDependent', 'leftToRight', 'rightToLeft'];\n}\n\nhorizontalAlignments.prototype.validate = function (val) {\n    if (this[val] === undefined) {\n        let opts = [];\n        for (let name in this) {\n            if (this.hasOwnProperty(name)) {\n                opts.push(name);\n            }\n        }\n        throw new TypeError(`Invalid value for alignment.horizontal ${val}; Value must be one of ${this.opts.join(', ')}`);\n    } else {\n        return true;\n    }\n};\n\nverticalAlignments.prototype.validate = function (val) {\n    if (this[val] === undefined) {\n        let opts = [];\n        for (let name in this) {\n            if (this.hasOwnProperty(name)) {\n                opts.push(name);\n            }\n        }\n        throw new TypeError(`Invalid value for alignment.vertical ${val}; Value must be one of ${this.opts.join(', ')}`);\n    } else {\n        return true;\n    }\n};\n\nreadingOrders.prototype.validate = function (val) {\n    if (this[val] === undefined) {\n        let opts = [];\n        for (let name in this) {\n            if (this.hasOwnProperty(name)) {\n                opts.push(name);\n            }\n        }\n        throw new TypeError(`Invalid value for alignment.readingOrder ${val}; Value must be one of ${this.opts.join(', ')}`);\n    } else {\n        return true;\n    }\n};\n\nmodule.exports.vertical = new verticalAlignments();\nmodule.exports.horizontal = new horizontalAlignments();\nmodule.exports.readingOrder = new readingOrders();"]}
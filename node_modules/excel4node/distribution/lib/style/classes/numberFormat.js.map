{"version":3,"sources":["../../../../source/lib/style/classes/numberFormat.js"],"names":[],"mappings":";;;;;;IAAM;;;;;;;AAMF,aANE,YAMF,CAAY,GAAZ,EAAiB;8BANf,cAMe;;AACb,aAAK,UAAL,GAAkB,GAAlB,CADa;AAEb,aAAK,EAAL,CAFa;KAAjB;;iBANE;;;;;;;;;;oCAwBU,KAAK;AACb,gBAAI,KAAK,UAAL,KAAoB,SAApB,EAA+B;AAC/B,oBAAI,GAAJ,CAAQ,QAAR,EACC,GADD,CACK,YADL,EACmB,KAAK,UAAL,CADnB,CAEC,GAFD,CAEK,UAFL,EAEiB,KAAK,QAAL,CAFjB,CAD+B;aAAnC;;;;4BAdW;AACX,mBAAO,KAAK,EAAL,CADI;;0BAGF,IAAI;AACb,iBAAK,EAAL,GAAU,EAAV,CADa;;;;WAdf;;;AAiCN,OAAO,OAAP,GAAiB,YAAjB","file":"numberFormat.js","sourcesContent":["class NumberFormat {\n    /**\n    * @class NumberFormat\n    * @param {String} fmt Format of the Number\n    * @returns {NumberFormat}\n    */\n    constructor(fmt) {\n        this.formatCode = fmt;\n        this.id;\n    }\n\n    get numFmtId() {\n        return this.id;\n    }\n    set numFmtId(id) {\n        this.id = id;\n    }\n\n    /**\n     * @alias NumberFormat.addToXMLele\n     * @desc When generating Workbook output, attaches style to the styles xml file\n     * @func NumberFormat.addToXMLele\n     * @param {xmlbuilder.Element} ele Element object of the xmlbuilder module\n     */\n    addToXMLele(ele) {\n        if (this.formatCode !== undefined) {\n            ele.ele('numFmt')\n            .att('formatCode', this.formatCode)\n            .att('numFmtId', this.numFmtId);\n        }\n    }\n}\n\nmodule.exports = NumberFormat;"]}
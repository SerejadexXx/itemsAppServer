{"version":3,"sources":["../../../../source/lib/style/classes/ctColor.js"],"names":[],"mappings":";;;;;;AAAA,IAAM,QAAQ,QAAQ,gBAAR,CAAR;AACN,IAAM,QAAQ,QAAQ,sBAAR,CAAR;AACN,IAAM,IAAI,QAAQ,QAAR,CAAJ;AACN,IAAM,aAAa,QAAQ,YAAR,CAAb;;IAEA;;;;;;;;;;;;AAUF,aAVE,OAUF,CAAY,KAAZ,EAAmB;8BAVjB,SAUiB;;AACf,aAAK,IAAL,CADe;AAEf,aAAK,GAAL,CAFe;AAGf,aAAK,KAAL;;AAHe,YAKX,OAAO,KAAP,KAAiB,QAAjB,EAA2B;AAC3B,gBAAI,MAAM,WAAN,CAAkB,MAAM,WAAN,EAAlB,MAA2C,SAA3C,EAAsD;AACtD,qBAAK,KAAL,GAAa,KAAb,CADsD;AAEtD,qBAAK,IAAL,GAAY,OAAZ,CAFsD;aAA1D,MAGO;AACH,oBAAI;AACA,yBAAK,GAAL,GAAW,MAAM,UAAN,CAAiB,QAAjB,CAA0B,KAA1B,CAAX,CADA;AAEA,yBAAK,IAAL,GAAY,KAAZ,CAFA;iBAAJ,CAGE,OAAO,CAAP,EAAU;AACR,0BAAM,IAAI,SAAJ,oDAA+D,MAAM,UAAN,CAAiB,IAAjB,CAAsB,IAAtB,CAA2B,IAA3B,2BAAqD,MAAM,WAAN,CAAkB,IAAlB,CAAuB,IAAvB,CAA4B,IAA5B,OAApH,CAAN,CADQ;iBAAV;aAPN;SADJ;KALJ;;;;;;;;;iBAVE;;mCAmCS;AACP,mBAAO,KAAK,KAAK,IAAL,CAAZ,CADO;;;;;;;;;;;;oCAUC,KAAK;AACb,gBAAI,WAAW,IAAI,GAAJ,CAAQ,OAAR,CAAX,CADS;AAEb,qBAAS,GAAT,CAAa,KAAK,IAAL,EAAW,KAAK,KAAK,IAAL,CAA7B,EAFa;;;;WA7Cf;;;AAmDN,OAAO,OAAP,GAAiB,OAAjB","file":"ctColor.js","sourcesContent":["const utils = require('../../utils.js');\nconst types = require('../../types/index.js');\nconst _ = require('lodash');\nconst xmlbuilder = require('xmlbuilder');\n\nclass CTColor { //ยง18.8.3 && ยง18.8.19\n    /** \n     * @class CTColor\n     * @desc Excel color representation\n     * @param {String} color Excel Color scheme or Excel Color name or HEX value of Color\n     * @properties {String} type Type of color object. defaults to rgb\n     * @properties {String} rgb ARGB representation of Color\n     * @properties {String} theme Excel Color Scheme\n     * @returns {CTColor}\n     */\n    constructor(color) {\n        this.type;\n        this.rgb;\n        this.theme; //ยง20.1.6.2 clrScheme (Color Scheme) : types.colorSchemes\n\n        if (typeof color === 'string') {\n            if (types.colorScheme[color.toLowerCase()] !== undefined) {\n                this.theme = color;\n                this.type = 'theme';\n            } else {\n                try {\n                    this.rgb = types.excelColor.getColor(color);\n                    this.type = 'rgb';\n                } catch (e) {\n                    throw new TypeError(`Fill color must be an RGB value, Excel color (${types.excelColor.opts.join(', ')}) or Excel theme (${types.colorScheme.opts.join(', ')})`);\n                }\n            }\n        }\n    }\n\n    /** \n     * @func CTColor.toObject\n     * @desc Converts the CTColor instance to a javascript object\n     * @returns {Object}\n     */\n    toObject() {\n        return this[this.type];\n    }\n\n    /**\n     * @alias CTColor.addToXMLele\n     * @desc When generating Workbook output, attaches style to the styles xml file\n     * @func CTColor.addToXMLele\n     * @param {xmlbuilder.Element} ele Element object of the xmlbuilder module\n     */\n    addToXMLele(ele) {\n        let colorEle = ele.ele('color');\n        colorEle.att(this.type, this[this.type]);\n    }\n}\n\nmodule.exports = CTColor;"]}
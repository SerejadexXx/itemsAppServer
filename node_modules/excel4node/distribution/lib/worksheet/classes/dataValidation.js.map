{"version":3,"sources":["../../../../source/lib/worksheet/classes/dataValidation.js"],"names":[],"mappings":"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","file":"dataValidation.js","sourcesContent":["const myUtils = require('../../utils.js');\n\nlet cleanFormula = (f) => {\n    if (typeof f === 'number' || f.substr(0, 1) === '=') {\n        return f;\n    } else {\n        return '\"' + f + '\"';\n    }\n};\n\nclass DataValidation { // ยง18.3.1.32 dataValidation (Data Validation)\n    constructor(opts) {\n        opts = opts ? opts : {};\n        if (opts.sqref === undefined) {\n            throw new TypeError('sqref must be specified when creating a DataValidation instance.');\n        }\n        this.sqref = opts.sqref;\n        if (opts.formulas instanceof Array) {\n            opts.formulas[0] !== undefined ? this.formula1 = opts.formulas[0] : null;\n            opts.formulas[1] !== undefined ? this.formula2 = opts.formulas[1] : null;\n        }\n\n        if (opts.allowBlank !== undefined) {\n            if (parseInt(opts.allowBlank) === 1) {\n                opts.allowBlank = true;\n            }\n            if (parseInt(opts.allowBlank) === 0) {\n                opts.allowBlank = false;\n            }\n            if (typeof opts.allowBlank !== 'boolean') {\n                throw new TypeError('DataValidation allowBlank must be true, false, 1 or 0');\n            }\n            this.allowBlank = opts.allowBlank; \n        }\n\n        if (opts.errorStyle !== undefined) {\n            let enums = ['stop', 'warning', 'information'];\n            if (enums.indexOf(opts.errorStyle) < 0) {\n                throw new TypeError('DataValidation errorStyle must be one of ' + enums.join(', '));\n            }\n            this.errorStyle = opts.errorStyle;\n        }\n\n        if (opts.error !== undefined) {\n            if (typeof opts.error !== 'string') {\n                throw new TypeError('DataValidation error must be a string');\n            }\n            this.error = opts.error;\n            this.showErrorMessage = opts.showErrorMessage = true;\n        }\n\n        if (opts.errorTitle !== undefined) {\n            if (typeof opts.errorStyle !== 'string') {\n                throw new TypeError('DataValidation errorTitle must be a string');\n            }\n            this.errorTitle = opts.errorTitle;\n            this.showErrorMessage = opts.showErrorMessage = true;\n        }\n\n        if (opts.imeMode !== undefined) {\n            let enums = ['noControl', 'off', 'on', 'disabled', 'hiragana', 'fullKatakana', 'halfKatakana', 'fullAlpha', 'halfAlpha', 'fullHangul', 'halfHangul'];\n            if (enums.indexOf(opts.imeMode) < 0) {\n                throw new TypeError('DataValidation imeMode must be one of ' + enums.join(', '));\n            }\n            this.imeMode = opts.imeMode;\n        }\n            \n        if (opts.operator !== undefined) {\n            let enums = ['between', 'notBetween', 'equal', 'notEqual', 'lessThan', 'lessThanOrEqual', 'greaterThan', 'greaterThanOrEqual'];\n            if (enums.indexOf(opts.operator) < 0) {\n                throw new TypeError('DataValidation operator must be one of ' + enums.join(', '));\n            }\n            this.operator = opts.operator;\n        }\n\n        if (opts.prompt !== undefined) {\n            if (typeof opts.prompt !== 'string') {\n                throw new TypeError('DataValidation prompt must be a string');\n            }\n            this.prompt = opts.prompt;\n            this.showInputMessage = opts.showInputMessage = true;\n        }\n\n        if (opts.promptTitle !== undefined) {\n            if (typeof opts.promptTitle !== 'string') {\n                throw new TypeError('DataValidation promptTitle must be a string');\n            }\n            this.promptTitle = opts.promptTitle;\n            this.showInputMessage = opts.showInputMessage = true;\n        }\n\n        if (opts.showDropDown !== undefined) {\n            if (parseInt(opts.showDropDown) === 1) {\n                opts.showDropDown = true;\n            }\n            if (parseInt(opts.showDropDown) === 0) {\n                opts.showDropDown = false;\n            }\n            if (typeof opts.showDropDown !== 'boolean') {\n                throw new TypeError('DataValidation showDropDown must be true, false, 1 or 0');\n            }\n            this.showDropDown = opts.showDropDown;\n        }\n\n        if (opts.showErrorMessage !== undefined) {\n            if (parseInt(opts.showErrorMessage) === 1) {\n                opts.showErrorMessage = true;\n            }\n            if (parseInt(opts.showErrorMessage) === 0) {\n                opts.showErrorMessage = false;\n            }\n            if (typeof opts.showErrorMessage !== 'boolean') {\n                throw new TypeError('DataValidation showErrorMessage must be true, false, 1 or 0');\n            }\n            this.showErrorMessage = opts.showErrorMessage;\n        }\n\n        if (opts.showInputMessage !== undefined) {\n            if (parseInt(opts.showInputMessage) === 1) {\n                opts.showInputMessage = true;\n            }\n            if (parseInt(opts.showInputMessage) === 0) {\n                opts.showInputMessage = false;\n            }\n            if (typeof opts.showInputMessage !== 'boolean') {\n                throw new TypeError('DataValidation showInputMessage must be true, false, 1 or 0');\n            }\n            this.showInputMessage = opts.showInputMessage;\n        }\n\n        if (opts.type !== undefined) {\n            let enums = ['none', 'whole', 'decimal', 'list', 'date', 'time', 'textLength', 'custom'];\n            if (enums.indexOf(opts.type) < 0) {\n                throw new TypeError('DataValidation type must be one of ' + enums.join(', '));\n            }\n            this.type = opts.type;\n        }\n    }\n\n    addToXMLele(ele) {\n        let valEle = ele.ele('dataValidation');\n        this.type !== undefined ? valEle.att('type', this.type) : null;\n        this.errorStyle !== undefined ? valEle.att('errorStyle', this.errorStyle) : null;\n        this.imeMode !== undefined ? valEle.att('imeMode', this.imeMode) : null;\n        this.operator !== undefined ? valEle.att('operator', this.operator) : null;\n        this.allowBlank !== undefined ? valEle.att('allowBlank', myUtils.boolToInt(this.allowBlank)) : null;\n        this.showDropDown !== undefined ? valEle.att('showDropDown', myUtils.boolToInt(this.showDropDown)) : null;\n        this.showInputMessage !== undefined ? valEle.att('showInputMessage', myUtils.boolToInt(this.showInputMessage)) : null;\n        this.showErrorMessage !== undefined ? valEle.att('showErrorMessage', myUtils.boolToInt(this.showErrorMessage)) : null;\n        this.errorTitle !== undefined ? valEle.att('errorTitle', this.errorTitle) : null;\n        this.error !== undefined ? valEle.att('error', this.error) : null;\n        this.promptTitle !== undefined ? valEle.att('promptTitle', this.promptTitle) : null;\n        this.prompt !== undefined ? valEle.att('prompt', this.prompt) : null;\n        this.sqref !== undefined ? valEle.att('sqref', this.sqref) : null;\n        this.formula1 !== undefined ? valEle.ele('formula1').text(cleanFormula(this.formula1)) : null;\n        this.formula2 !== undefined ? valEle.ele('formula2').text(cleanFormula(this.formula2)) : null;\n    }\n}\n\nclass DataValidationCollection { // ยง18.3.1.33 dataValidations (Data Validations)\n    constructor(opts) {\n        opts = opts ? opts : {};\n        this.items = [];\n    }\n\n    get length() {\n        return this.items.length;\n    }\n\n    add(opts) {\n        let thisValidation = new DataValidation(opts);\n        this.items.push(thisValidation);\n        return thisValidation;\n    }\n\n    addToXMLele(ele) {\n        let valsEle = ele.ele('dataValidations').att('count', this.length);\n        this.items.forEach((val) => {\n            val.addToXMLele(valsEle);\n        });\n    }\n}\n\nmodule.exports = { DataValidationCollection, DataValidation };\n"]}
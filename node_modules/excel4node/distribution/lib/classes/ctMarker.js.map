{"version":3,"sources":["../../../source/lib/classes/ctMarker.js"],"names":[],"mappings":";;;;;;AAAA,IAAI,MAAM,QAAQ,UAAR,CAAN;;IAEE;;;;;;;;;;;;;;AAaF,aAbE,QAaF,CAAY,KAAZ,EAAmB,SAAnB,EAA8B,KAA9B,EAAqC,SAArC,EAAgD;8BAb9C,UAa8C;;AAC5C,aAAK,IAAL,GAAY,KAAZ,CAD4C;AAE5C,aAAK,OAAL,GAAe,IAAI,GAAJ,CAAQ,SAAR,CAAf,CAF4C;AAG5C,aAAK,IAAL,GAAY,KAAZ,CAH4C;AAI5C,aAAK,OAAL,GAAe,IAAI,GAAJ,CAAQ,SAAR,CAAf,CAJ4C;KAAhD;;iBAbE;;4BAoBQ;AACN,mBAAO,KAAK,IAAL,CADD;;0BAGF,KAAK;AACT,gBAAI,SAAS,GAAT,EAAc,EAAd,MAAsB,GAAtB,IAA6B,MAAM,CAAN,EAAS;AACtC,sBAAM,IAAI,SAAJ,CAAc,4CAAd,CAAN,CADsC;aAA1C;AAGA,iBAAK,IAAL,GAAY,GAAZ,CAJS;;;;4BAOH;AACN,mBAAO,KAAK,IAAL,CADD;;0BAGF,KAAK;AACT,gBAAI,SAAS,GAAT,EAAc,EAAd,MAAsB,GAAtB,IAA6B,MAAM,CAAN,EAAS;AACtC,sBAAM,IAAI,SAAJ,CAAc,yCAAd,CAAN,CADsC;aAA1C;AAGA,iBAAK,IAAL,GAAY,GAAZ,CAJS;;;;4BAOA;AACT,mBAAO,KAAK,OAAL,CAAa,KAAb,CADE;;0BAGF,KAAK;AACZ,iBAAK,OAAL,GAAe,IAAI,GAAJ,CAAQ,GAAR,CAAf,CADY;;;;4BAIH;AACT,mBAAO,KAAK,OAAL,CAAa,KAAb,CADE;;0BAGF,KAAK;AACZ,iBAAK,OAAL,GAAe,IAAI,GAAJ,CAAQ,GAAR,CAAf,CADY;;;;WAlDd;;;AAuDN,OAAO,OAAP,GAAiB,QAAjB","file":"ctMarker.js","sourcesContent":["let EMU = require('./emu.js');\n\nclass CTMarker {\n    /**\n     * Element representing an Excel position marker\n     * @param {Number} colId Column Number\n     * @param {String} colOffset Offset stating how far right to shift the start edge\n     * @param {Number} rowId Row Number\n     * @param {String} rowOffset Offset stating how far down to shift the start edge\n     * @property {Number} col Column number\n     * @property {EMU} colOff EMUs of right shift\n     * @property {Number} row Row number\n     * @property {EMU} rowOff EMUs of top shift\n     * @returns {CTMarker} Excel CTMarker \n     */\n    constructor(colId, colOffset, rowId, rowOffset) {\n        this._col = colId;\n        this._colOff = new EMU(colOffset);\n        this._row = rowId;\n        this._rowOff = new EMU(rowOffset);\n    }\n\n    get col() {\n        return this._col;\n    }\n    set col(val) {\n        if (parseInt(val, 10) !== val || val < 0) {\n            throw new TypeError('CTMarker column must be a positive integer');\n        }\n        this._col = val;\n    }\n\n    get row() {\n        return this._row;\n    }\n    set row(val) {\n        if (parseInt(val, 10) !== val || val < 0) {\n            throw new TypeError('CTMarker row must be a positive integer');\n        }\n        this._row = val;\n    }\n\n    get colOff() {\n        return this._colOff.value;\n    }\n    set colOff(val) {\n        this._colOff = new EMU(val);\n    }\n\n    get rowOff() {\n        return this._rowOff.value;\n    }\n    set rowOff(val) {\n        this._rowOff = new EMU(val);\n    }\n}\n\nmodule.exports = CTMarker;"]}